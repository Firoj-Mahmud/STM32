
000TestProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b88  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000078  08000d20  08000d20  00010d20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d98  08000d98  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000d98  08000d98  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d98  08000d98  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d98  08000d98  00010d98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d9c  08000d9c  00010d9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000da0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000e04  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000e04  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002142  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000058b  00000000  00000000  000221d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00022768  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00022880  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002af7  00000000  00000000  00022960  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001201  00000000  00000000  00025457  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000910a  00000000  00000000  00026658  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f762  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000924  00000000  00000000  0002f7e0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000064 	.word	0x20000064
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000d08 	.word	0x08000d08

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000068 	.word	0x20000068
 80001d4:	08000d08 	.word	0x08000d08

080001d8 <main>:
#include<stdio.h>



int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
   printf("Hello programmer\n"); /* Loop forever */
 80001dc:	4801      	ldr	r0, [pc, #4]	; (80001e4 <main+0xc>)
 80001de:	f000 f987 	bl	80004f0 <puts>
	for(;;);
 80001e2:	e7fe      	b.n	80001e2 <main+0xa>
 80001e4:	08000d20 	.word	0x08000d20

080001e8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001f2:	4b0f      	ldr	r3, [pc, #60]	; (8000230 <ITM_SendChar+0x48>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a0e      	ldr	r2, [pc, #56]	; (8000230 <ITM_SendChar+0x48>)
 80001f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001fc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001fe:	4b0d      	ldr	r3, [pc, #52]	; (8000234 <ITM_SendChar+0x4c>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a0c      	ldr	r2, [pc, #48]	; (8000234 <ITM_SendChar+0x4c>)
 8000204:	f043 0301 	orr.w	r3, r3, #1
 8000208:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800020a:	bf00      	nop
 800020c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f003 0301 	and.w	r3, r3, #1
 8000216:	2b00      	cmp	r3, #0
 8000218:	d0f8      	beq.n	800020c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800021a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800021e:	79fb      	ldrb	r3, [r7, #7]
 8000220:	6013      	str	r3, [r2, #0]
}
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	e000edfc 	.word	0xe000edfc
 8000234:	e0000e00 	.word	0xe0000e00

08000238 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b086      	sub	sp, #24
 800023c:	af00      	add	r7, sp, #0
 800023e:	60f8      	str	r0, [r7, #12]
 8000240:	60b9      	str	r1, [r7, #8]
 8000242:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000244:	2300      	movs	r3, #0
 8000246:	617b      	str	r3, [r7, #20]
 8000248:	e00a      	b.n	8000260 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800024a:	f3af 8000 	nop.w
 800024e:	4601      	mov	r1, r0
 8000250:	68bb      	ldr	r3, [r7, #8]
 8000252:	1c5a      	adds	r2, r3, #1
 8000254:	60ba      	str	r2, [r7, #8]
 8000256:	b2ca      	uxtb	r2, r1
 8000258:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800025a:	697b      	ldr	r3, [r7, #20]
 800025c:	3301      	adds	r3, #1
 800025e:	617b      	str	r3, [r7, #20]
 8000260:	697a      	ldr	r2, [r7, #20]
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	429a      	cmp	r2, r3
 8000266:	dbf0      	blt.n	800024a <_read+0x12>
	}

return len;
 8000268:	687b      	ldr	r3, [r7, #4]
}
 800026a:	4618      	mov	r0, r3
 800026c:	3718      	adds	r7, #24
 800026e:	46bd      	mov	sp, r7
 8000270:	bd80      	pop	{r7, pc}

08000272 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000272:	b580      	push	{r7, lr}
 8000274:	b086      	sub	sp, #24
 8000276:	af00      	add	r7, sp, #0
 8000278:	60f8      	str	r0, [r7, #12]
 800027a:	60b9      	str	r1, [r7, #8]
 800027c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800027e:	2300      	movs	r3, #0
 8000280:	617b      	str	r3, [r7, #20]
 8000282:	e009      	b.n	8000298 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000284:	68bb      	ldr	r3, [r7, #8]
 8000286:	1c5a      	adds	r2, r3, #1
 8000288:	60ba      	str	r2, [r7, #8]
 800028a:	781b      	ldrb	r3, [r3, #0]
 800028c:	4618      	mov	r0, r3
 800028e:	f7ff ffab 	bl	80001e8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000292:	697b      	ldr	r3, [r7, #20]
 8000294:	3301      	adds	r3, #1
 8000296:	617b      	str	r3, [r7, #20]
 8000298:	697a      	ldr	r2, [r7, #20]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	429a      	cmp	r2, r3
 800029e:	dbf1      	blt.n	8000284 <_write+0x12>
	}
	return len;
 80002a0:	687b      	ldr	r3, [r7, #4]
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3718      	adds	r7, #24
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}

080002aa <_close>:

int _close(int file)
{
 80002aa:	b480      	push	{r7}
 80002ac:	b083      	sub	sp, #12
 80002ae:	af00      	add	r7, sp, #0
 80002b0:	6078      	str	r0, [r7, #4]
	return -1;
 80002b2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002b6:	4618      	mov	r0, r3
 80002b8:	370c      	adds	r7, #12
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr

080002c2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002c2:	b480      	push	{r7}
 80002c4:	b083      	sub	sp, #12
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	6078      	str	r0, [r7, #4]
 80002ca:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002cc:	683b      	ldr	r3, [r7, #0]
 80002ce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002d2:	605a      	str	r2, [r3, #4]
	return 0;
 80002d4:	2300      	movs	r3, #0
}
 80002d6:	4618      	mov	r0, r3
 80002d8:	370c      	adds	r7, #12
 80002da:	46bd      	mov	sp, r7
 80002dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e0:	4770      	bx	lr

080002e2 <_isatty>:

int _isatty(int file)
{
 80002e2:	b480      	push	{r7}
 80002e4:	b083      	sub	sp, #12
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	6078      	str	r0, [r7, #4]
	return 1;
 80002ea:	2301      	movs	r3, #1
}
 80002ec:	4618      	mov	r0, r3
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f6:	4770      	bx	lr

080002f8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b085      	sub	sp, #20
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60f8      	str	r0, [r7, #12]
 8000300:	60b9      	str	r1, [r7, #8]
 8000302:	607a      	str	r2, [r7, #4]
	return 0;
 8000304:	2300      	movs	r3, #0
}
 8000306:	4618      	mov	r0, r3
 8000308:	3714      	adds	r7, #20
 800030a:	46bd      	mov	sp, r7
 800030c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000310:	4770      	bx	lr
	...

08000314 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000314:	b580      	push	{r7, lr}
 8000316:	b086      	sub	sp, #24
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800031c:	4a14      	ldr	r2, [pc, #80]	; (8000370 <_sbrk+0x5c>)
 800031e:	4b15      	ldr	r3, [pc, #84]	; (8000374 <_sbrk+0x60>)
 8000320:	1ad3      	subs	r3, r2, r3
 8000322:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000324:	697b      	ldr	r3, [r7, #20]
 8000326:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000328:	4b13      	ldr	r3, [pc, #76]	; (8000378 <_sbrk+0x64>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	2b00      	cmp	r3, #0
 800032e:	d102      	bne.n	8000336 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000330:	4b11      	ldr	r3, [pc, #68]	; (8000378 <_sbrk+0x64>)
 8000332:	4a12      	ldr	r2, [pc, #72]	; (800037c <_sbrk+0x68>)
 8000334:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000336:	4b10      	ldr	r3, [pc, #64]	; (8000378 <_sbrk+0x64>)
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4413      	add	r3, r2
 800033e:	693a      	ldr	r2, [r7, #16]
 8000340:	429a      	cmp	r2, r3
 8000342:	d207      	bcs.n	8000354 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000344:	f000 f846 	bl	80003d4 <__errno>
 8000348:	4602      	mov	r2, r0
 800034a:	230c      	movs	r3, #12
 800034c:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295
 8000352:	e009      	b.n	8000368 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000354:	4b08      	ldr	r3, [pc, #32]	; (8000378 <_sbrk+0x64>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800035a:	4b07      	ldr	r3, [pc, #28]	; (8000378 <_sbrk+0x64>)
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4413      	add	r3, r2
 8000362:	4a05      	ldr	r2, [pc, #20]	; (8000378 <_sbrk+0x64>)
 8000364:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000366:	68fb      	ldr	r3, [r7, #12]
}
 8000368:	4618      	mov	r0, r3
 800036a:	3718      	adds	r7, #24
 800036c:	46bd      	mov	sp, r7
 800036e:	bd80      	pop	{r7, pc}
 8000370:	20020000 	.word	0x20020000
 8000374:	00000400 	.word	0x00000400
 8000378:	20000080 	.word	0x20000080
 800037c:	20000090 	.word	0x20000090

08000380 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000380:	480d      	ldr	r0, [pc, #52]	; (80003b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000382:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000384:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000388:	480c      	ldr	r0, [pc, #48]	; (80003bc <LoopForever+0x6>)
  ldr r1, =_edata
 800038a:	490d      	ldr	r1, [pc, #52]	; (80003c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800038c:	4a0d      	ldr	r2, [pc, #52]	; (80003c4 <LoopForever+0xe>)
  movs r3, #0
 800038e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000390:	e002      	b.n	8000398 <LoopCopyDataInit>

08000392 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000392:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000394:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000396:	3304      	adds	r3, #4

08000398 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000398:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800039a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800039c:	d3f9      	bcc.n	8000392 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800039e:	4a0a      	ldr	r2, [pc, #40]	; (80003c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a0:	4c0a      	ldr	r4, [pc, #40]	; (80003cc <LoopForever+0x16>)
  movs r3, #0
 80003a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a4:	e001      	b.n	80003aa <LoopFillZerobss>

080003a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a8:	3204      	adds	r2, #4

080003aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ac:	d3fb      	bcc.n	80003a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ae:	f000 f817 	bl	80003e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003b2:	f7ff ff11 	bl	80001d8 <main>

080003b6 <LoopForever>:

LoopForever:
    b LoopForever
 80003b6:	e7fe      	b.n	80003b6 <LoopForever>
  ldr   r0, =_estack
 80003b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003c4:	08000da0 	.word	0x08000da0
  ldr r2, =_sbss
 80003c8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003cc:	20000090 	.word	0x20000090

080003d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d0:	e7fe      	b.n	80003d0 <ADC_IRQHandler>
	...

080003d4 <__errno>:
 80003d4:	4b01      	ldr	r3, [pc, #4]	; (80003dc <__errno+0x8>)
 80003d6:	6818      	ldr	r0, [r3, #0]
 80003d8:	4770      	bx	lr
 80003da:	bf00      	nop
 80003dc:	20000000 	.word	0x20000000

080003e0 <__libc_init_array>:
 80003e0:	b570      	push	{r4, r5, r6, lr}
 80003e2:	4e0d      	ldr	r6, [pc, #52]	; (8000418 <__libc_init_array+0x38>)
 80003e4:	4c0d      	ldr	r4, [pc, #52]	; (800041c <__libc_init_array+0x3c>)
 80003e6:	1ba4      	subs	r4, r4, r6
 80003e8:	10a4      	asrs	r4, r4, #2
 80003ea:	2500      	movs	r5, #0
 80003ec:	42a5      	cmp	r5, r4
 80003ee:	d109      	bne.n	8000404 <__libc_init_array+0x24>
 80003f0:	4e0b      	ldr	r6, [pc, #44]	; (8000420 <__libc_init_array+0x40>)
 80003f2:	4c0c      	ldr	r4, [pc, #48]	; (8000424 <__libc_init_array+0x44>)
 80003f4:	f000 fc88 	bl	8000d08 <_init>
 80003f8:	1ba4      	subs	r4, r4, r6
 80003fa:	10a4      	asrs	r4, r4, #2
 80003fc:	2500      	movs	r5, #0
 80003fe:	42a5      	cmp	r5, r4
 8000400:	d105      	bne.n	800040e <__libc_init_array+0x2e>
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000408:	4798      	blx	r3
 800040a:	3501      	adds	r5, #1
 800040c:	e7ee      	b.n	80003ec <__libc_init_array+0xc>
 800040e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000412:	4798      	blx	r3
 8000414:	3501      	adds	r5, #1
 8000416:	e7f2      	b.n	80003fe <__libc_init_array+0x1e>
 8000418:	08000d98 	.word	0x08000d98
 800041c:	08000d98 	.word	0x08000d98
 8000420:	08000d98 	.word	0x08000d98
 8000424:	08000d9c 	.word	0x08000d9c

08000428 <memset>:
 8000428:	4402      	add	r2, r0
 800042a:	4603      	mov	r3, r0
 800042c:	4293      	cmp	r3, r2
 800042e:	d100      	bne.n	8000432 <memset+0xa>
 8000430:	4770      	bx	lr
 8000432:	f803 1b01 	strb.w	r1, [r3], #1
 8000436:	e7f9      	b.n	800042c <memset+0x4>

08000438 <_puts_r>:
 8000438:	b570      	push	{r4, r5, r6, lr}
 800043a:	460e      	mov	r6, r1
 800043c:	4605      	mov	r5, r0
 800043e:	b118      	cbz	r0, 8000448 <_puts_r+0x10>
 8000440:	6983      	ldr	r3, [r0, #24]
 8000442:	b90b      	cbnz	r3, 8000448 <_puts_r+0x10>
 8000444:	f000 fa0c 	bl	8000860 <__sinit>
 8000448:	69ab      	ldr	r3, [r5, #24]
 800044a:	68ac      	ldr	r4, [r5, #8]
 800044c:	b913      	cbnz	r3, 8000454 <_puts_r+0x1c>
 800044e:	4628      	mov	r0, r5
 8000450:	f000 fa06 	bl	8000860 <__sinit>
 8000454:	4b23      	ldr	r3, [pc, #140]	; (80004e4 <_puts_r+0xac>)
 8000456:	429c      	cmp	r4, r3
 8000458:	d117      	bne.n	800048a <_puts_r+0x52>
 800045a:	686c      	ldr	r4, [r5, #4]
 800045c:	89a3      	ldrh	r3, [r4, #12]
 800045e:	071b      	lsls	r3, r3, #28
 8000460:	d51d      	bpl.n	800049e <_puts_r+0x66>
 8000462:	6923      	ldr	r3, [r4, #16]
 8000464:	b1db      	cbz	r3, 800049e <_puts_r+0x66>
 8000466:	3e01      	subs	r6, #1
 8000468:	68a3      	ldr	r3, [r4, #8]
 800046a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800046e:	3b01      	subs	r3, #1
 8000470:	60a3      	str	r3, [r4, #8]
 8000472:	b9e9      	cbnz	r1, 80004b0 <_puts_r+0x78>
 8000474:	2b00      	cmp	r3, #0
 8000476:	da2e      	bge.n	80004d6 <_puts_r+0x9e>
 8000478:	4622      	mov	r2, r4
 800047a:	210a      	movs	r1, #10
 800047c:	4628      	mov	r0, r5
 800047e:	f000 f83f 	bl	8000500 <__swbuf_r>
 8000482:	3001      	adds	r0, #1
 8000484:	d011      	beq.n	80004aa <_puts_r+0x72>
 8000486:	200a      	movs	r0, #10
 8000488:	e011      	b.n	80004ae <_puts_r+0x76>
 800048a:	4b17      	ldr	r3, [pc, #92]	; (80004e8 <_puts_r+0xb0>)
 800048c:	429c      	cmp	r4, r3
 800048e:	d101      	bne.n	8000494 <_puts_r+0x5c>
 8000490:	68ac      	ldr	r4, [r5, #8]
 8000492:	e7e3      	b.n	800045c <_puts_r+0x24>
 8000494:	4b15      	ldr	r3, [pc, #84]	; (80004ec <_puts_r+0xb4>)
 8000496:	429c      	cmp	r4, r3
 8000498:	bf08      	it	eq
 800049a:	68ec      	ldreq	r4, [r5, #12]
 800049c:	e7de      	b.n	800045c <_puts_r+0x24>
 800049e:	4621      	mov	r1, r4
 80004a0:	4628      	mov	r0, r5
 80004a2:	f000 f87f 	bl	80005a4 <__swsetup_r>
 80004a6:	2800      	cmp	r0, #0
 80004a8:	d0dd      	beq.n	8000466 <_puts_r+0x2e>
 80004aa:	f04f 30ff 	mov.w	r0, #4294967295
 80004ae:	bd70      	pop	{r4, r5, r6, pc}
 80004b0:	2b00      	cmp	r3, #0
 80004b2:	da04      	bge.n	80004be <_puts_r+0x86>
 80004b4:	69a2      	ldr	r2, [r4, #24]
 80004b6:	429a      	cmp	r2, r3
 80004b8:	dc06      	bgt.n	80004c8 <_puts_r+0x90>
 80004ba:	290a      	cmp	r1, #10
 80004bc:	d004      	beq.n	80004c8 <_puts_r+0x90>
 80004be:	6823      	ldr	r3, [r4, #0]
 80004c0:	1c5a      	adds	r2, r3, #1
 80004c2:	6022      	str	r2, [r4, #0]
 80004c4:	7019      	strb	r1, [r3, #0]
 80004c6:	e7cf      	b.n	8000468 <_puts_r+0x30>
 80004c8:	4622      	mov	r2, r4
 80004ca:	4628      	mov	r0, r5
 80004cc:	f000 f818 	bl	8000500 <__swbuf_r>
 80004d0:	3001      	adds	r0, #1
 80004d2:	d1c9      	bne.n	8000468 <_puts_r+0x30>
 80004d4:	e7e9      	b.n	80004aa <_puts_r+0x72>
 80004d6:	6823      	ldr	r3, [r4, #0]
 80004d8:	200a      	movs	r0, #10
 80004da:	1c5a      	adds	r2, r3, #1
 80004dc:	6022      	str	r2, [r4, #0]
 80004de:	7018      	strb	r0, [r3, #0]
 80004e0:	e7e5      	b.n	80004ae <_puts_r+0x76>
 80004e2:	bf00      	nop
 80004e4:	08000d58 	.word	0x08000d58
 80004e8:	08000d78 	.word	0x08000d78
 80004ec:	08000d38 	.word	0x08000d38

080004f0 <puts>:
 80004f0:	4b02      	ldr	r3, [pc, #8]	; (80004fc <puts+0xc>)
 80004f2:	4601      	mov	r1, r0
 80004f4:	6818      	ldr	r0, [r3, #0]
 80004f6:	f7ff bf9f 	b.w	8000438 <_puts_r>
 80004fa:	bf00      	nop
 80004fc:	20000000 	.word	0x20000000

08000500 <__swbuf_r>:
 8000500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000502:	460e      	mov	r6, r1
 8000504:	4614      	mov	r4, r2
 8000506:	4605      	mov	r5, r0
 8000508:	b118      	cbz	r0, 8000512 <__swbuf_r+0x12>
 800050a:	6983      	ldr	r3, [r0, #24]
 800050c:	b90b      	cbnz	r3, 8000512 <__swbuf_r+0x12>
 800050e:	f000 f9a7 	bl	8000860 <__sinit>
 8000512:	4b21      	ldr	r3, [pc, #132]	; (8000598 <__swbuf_r+0x98>)
 8000514:	429c      	cmp	r4, r3
 8000516:	d12a      	bne.n	800056e <__swbuf_r+0x6e>
 8000518:	686c      	ldr	r4, [r5, #4]
 800051a:	69a3      	ldr	r3, [r4, #24]
 800051c:	60a3      	str	r3, [r4, #8]
 800051e:	89a3      	ldrh	r3, [r4, #12]
 8000520:	071a      	lsls	r2, r3, #28
 8000522:	d52e      	bpl.n	8000582 <__swbuf_r+0x82>
 8000524:	6923      	ldr	r3, [r4, #16]
 8000526:	b363      	cbz	r3, 8000582 <__swbuf_r+0x82>
 8000528:	6923      	ldr	r3, [r4, #16]
 800052a:	6820      	ldr	r0, [r4, #0]
 800052c:	1ac0      	subs	r0, r0, r3
 800052e:	6963      	ldr	r3, [r4, #20]
 8000530:	b2f6      	uxtb	r6, r6
 8000532:	4283      	cmp	r3, r0
 8000534:	4637      	mov	r7, r6
 8000536:	dc04      	bgt.n	8000542 <__swbuf_r+0x42>
 8000538:	4621      	mov	r1, r4
 800053a:	4628      	mov	r0, r5
 800053c:	f000 f926 	bl	800078c <_fflush_r>
 8000540:	bb28      	cbnz	r0, 800058e <__swbuf_r+0x8e>
 8000542:	68a3      	ldr	r3, [r4, #8]
 8000544:	3b01      	subs	r3, #1
 8000546:	60a3      	str	r3, [r4, #8]
 8000548:	6823      	ldr	r3, [r4, #0]
 800054a:	1c5a      	adds	r2, r3, #1
 800054c:	6022      	str	r2, [r4, #0]
 800054e:	701e      	strb	r6, [r3, #0]
 8000550:	6963      	ldr	r3, [r4, #20]
 8000552:	3001      	adds	r0, #1
 8000554:	4283      	cmp	r3, r0
 8000556:	d004      	beq.n	8000562 <__swbuf_r+0x62>
 8000558:	89a3      	ldrh	r3, [r4, #12]
 800055a:	07db      	lsls	r3, r3, #31
 800055c:	d519      	bpl.n	8000592 <__swbuf_r+0x92>
 800055e:	2e0a      	cmp	r6, #10
 8000560:	d117      	bne.n	8000592 <__swbuf_r+0x92>
 8000562:	4621      	mov	r1, r4
 8000564:	4628      	mov	r0, r5
 8000566:	f000 f911 	bl	800078c <_fflush_r>
 800056a:	b190      	cbz	r0, 8000592 <__swbuf_r+0x92>
 800056c:	e00f      	b.n	800058e <__swbuf_r+0x8e>
 800056e:	4b0b      	ldr	r3, [pc, #44]	; (800059c <__swbuf_r+0x9c>)
 8000570:	429c      	cmp	r4, r3
 8000572:	d101      	bne.n	8000578 <__swbuf_r+0x78>
 8000574:	68ac      	ldr	r4, [r5, #8]
 8000576:	e7d0      	b.n	800051a <__swbuf_r+0x1a>
 8000578:	4b09      	ldr	r3, [pc, #36]	; (80005a0 <__swbuf_r+0xa0>)
 800057a:	429c      	cmp	r4, r3
 800057c:	bf08      	it	eq
 800057e:	68ec      	ldreq	r4, [r5, #12]
 8000580:	e7cb      	b.n	800051a <__swbuf_r+0x1a>
 8000582:	4621      	mov	r1, r4
 8000584:	4628      	mov	r0, r5
 8000586:	f000 f80d 	bl	80005a4 <__swsetup_r>
 800058a:	2800      	cmp	r0, #0
 800058c:	d0cc      	beq.n	8000528 <__swbuf_r+0x28>
 800058e:	f04f 37ff 	mov.w	r7, #4294967295
 8000592:	4638      	mov	r0, r7
 8000594:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000596:	bf00      	nop
 8000598:	08000d58 	.word	0x08000d58
 800059c:	08000d78 	.word	0x08000d78
 80005a0:	08000d38 	.word	0x08000d38

080005a4 <__swsetup_r>:
 80005a4:	4b32      	ldr	r3, [pc, #200]	; (8000670 <__swsetup_r+0xcc>)
 80005a6:	b570      	push	{r4, r5, r6, lr}
 80005a8:	681d      	ldr	r5, [r3, #0]
 80005aa:	4606      	mov	r6, r0
 80005ac:	460c      	mov	r4, r1
 80005ae:	b125      	cbz	r5, 80005ba <__swsetup_r+0x16>
 80005b0:	69ab      	ldr	r3, [r5, #24]
 80005b2:	b913      	cbnz	r3, 80005ba <__swsetup_r+0x16>
 80005b4:	4628      	mov	r0, r5
 80005b6:	f000 f953 	bl	8000860 <__sinit>
 80005ba:	4b2e      	ldr	r3, [pc, #184]	; (8000674 <__swsetup_r+0xd0>)
 80005bc:	429c      	cmp	r4, r3
 80005be:	d10f      	bne.n	80005e0 <__swsetup_r+0x3c>
 80005c0:	686c      	ldr	r4, [r5, #4]
 80005c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005c6:	b29a      	uxth	r2, r3
 80005c8:	0715      	lsls	r5, r2, #28
 80005ca:	d42c      	bmi.n	8000626 <__swsetup_r+0x82>
 80005cc:	06d0      	lsls	r0, r2, #27
 80005ce:	d411      	bmi.n	80005f4 <__swsetup_r+0x50>
 80005d0:	2209      	movs	r2, #9
 80005d2:	6032      	str	r2, [r6, #0]
 80005d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005d8:	81a3      	strh	r3, [r4, #12]
 80005da:	f04f 30ff 	mov.w	r0, #4294967295
 80005de:	e03e      	b.n	800065e <__swsetup_r+0xba>
 80005e0:	4b25      	ldr	r3, [pc, #148]	; (8000678 <__swsetup_r+0xd4>)
 80005e2:	429c      	cmp	r4, r3
 80005e4:	d101      	bne.n	80005ea <__swsetup_r+0x46>
 80005e6:	68ac      	ldr	r4, [r5, #8]
 80005e8:	e7eb      	b.n	80005c2 <__swsetup_r+0x1e>
 80005ea:	4b24      	ldr	r3, [pc, #144]	; (800067c <__swsetup_r+0xd8>)
 80005ec:	429c      	cmp	r4, r3
 80005ee:	bf08      	it	eq
 80005f0:	68ec      	ldreq	r4, [r5, #12]
 80005f2:	e7e6      	b.n	80005c2 <__swsetup_r+0x1e>
 80005f4:	0751      	lsls	r1, r2, #29
 80005f6:	d512      	bpl.n	800061e <__swsetup_r+0x7a>
 80005f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005fa:	b141      	cbz	r1, 800060e <__swsetup_r+0x6a>
 80005fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000600:	4299      	cmp	r1, r3
 8000602:	d002      	beq.n	800060a <__swsetup_r+0x66>
 8000604:	4630      	mov	r0, r6
 8000606:	f000 fa19 	bl	8000a3c <_free_r>
 800060a:	2300      	movs	r3, #0
 800060c:	6363      	str	r3, [r4, #52]	; 0x34
 800060e:	89a3      	ldrh	r3, [r4, #12]
 8000610:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000614:	81a3      	strh	r3, [r4, #12]
 8000616:	2300      	movs	r3, #0
 8000618:	6063      	str	r3, [r4, #4]
 800061a:	6923      	ldr	r3, [r4, #16]
 800061c:	6023      	str	r3, [r4, #0]
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	f043 0308 	orr.w	r3, r3, #8
 8000624:	81a3      	strh	r3, [r4, #12]
 8000626:	6923      	ldr	r3, [r4, #16]
 8000628:	b94b      	cbnz	r3, 800063e <__swsetup_r+0x9a>
 800062a:	89a3      	ldrh	r3, [r4, #12]
 800062c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000630:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000634:	d003      	beq.n	800063e <__swsetup_r+0x9a>
 8000636:	4621      	mov	r1, r4
 8000638:	4630      	mov	r0, r6
 800063a:	f000 f9bf 	bl	80009bc <__smakebuf_r>
 800063e:	89a2      	ldrh	r2, [r4, #12]
 8000640:	f012 0301 	ands.w	r3, r2, #1
 8000644:	d00c      	beq.n	8000660 <__swsetup_r+0xbc>
 8000646:	2300      	movs	r3, #0
 8000648:	60a3      	str	r3, [r4, #8]
 800064a:	6963      	ldr	r3, [r4, #20]
 800064c:	425b      	negs	r3, r3
 800064e:	61a3      	str	r3, [r4, #24]
 8000650:	6923      	ldr	r3, [r4, #16]
 8000652:	b953      	cbnz	r3, 800066a <__swsetup_r+0xc6>
 8000654:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000658:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800065c:	d1ba      	bne.n	80005d4 <__swsetup_r+0x30>
 800065e:	bd70      	pop	{r4, r5, r6, pc}
 8000660:	0792      	lsls	r2, r2, #30
 8000662:	bf58      	it	pl
 8000664:	6963      	ldrpl	r3, [r4, #20]
 8000666:	60a3      	str	r3, [r4, #8]
 8000668:	e7f2      	b.n	8000650 <__swsetup_r+0xac>
 800066a:	2000      	movs	r0, #0
 800066c:	e7f7      	b.n	800065e <__swsetup_r+0xba>
 800066e:	bf00      	nop
 8000670:	20000000 	.word	0x20000000
 8000674:	08000d58 	.word	0x08000d58
 8000678:	08000d78 	.word	0x08000d78
 800067c:	08000d38 	.word	0x08000d38

08000680 <__sflush_r>:
 8000680:	898a      	ldrh	r2, [r1, #12]
 8000682:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000686:	4605      	mov	r5, r0
 8000688:	0710      	lsls	r0, r2, #28
 800068a:	460c      	mov	r4, r1
 800068c:	d458      	bmi.n	8000740 <__sflush_r+0xc0>
 800068e:	684b      	ldr	r3, [r1, #4]
 8000690:	2b00      	cmp	r3, #0
 8000692:	dc05      	bgt.n	80006a0 <__sflush_r+0x20>
 8000694:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000696:	2b00      	cmp	r3, #0
 8000698:	dc02      	bgt.n	80006a0 <__sflush_r+0x20>
 800069a:	2000      	movs	r0, #0
 800069c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006a2:	2e00      	cmp	r6, #0
 80006a4:	d0f9      	beq.n	800069a <__sflush_r+0x1a>
 80006a6:	2300      	movs	r3, #0
 80006a8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006ac:	682f      	ldr	r7, [r5, #0]
 80006ae:	6a21      	ldr	r1, [r4, #32]
 80006b0:	602b      	str	r3, [r5, #0]
 80006b2:	d032      	beq.n	800071a <__sflush_r+0x9a>
 80006b4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006b6:	89a3      	ldrh	r3, [r4, #12]
 80006b8:	075a      	lsls	r2, r3, #29
 80006ba:	d505      	bpl.n	80006c8 <__sflush_r+0x48>
 80006bc:	6863      	ldr	r3, [r4, #4]
 80006be:	1ac0      	subs	r0, r0, r3
 80006c0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006c2:	b10b      	cbz	r3, 80006c8 <__sflush_r+0x48>
 80006c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006c6:	1ac0      	subs	r0, r0, r3
 80006c8:	2300      	movs	r3, #0
 80006ca:	4602      	mov	r2, r0
 80006cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006ce:	6a21      	ldr	r1, [r4, #32]
 80006d0:	4628      	mov	r0, r5
 80006d2:	47b0      	blx	r6
 80006d4:	1c43      	adds	r3, r0, #1
 80006d6:	89a3      	ldrh	r3, [r4, #12]
 80006d8:	d106      	bne.n	80006e8 <__sflush_r+0x68>
 80006da:	6829      	ldr	r1, [r5, #0]
 80006dc:	291d      	cmp	r1, #29
 80006de:	d848      	bhi.n	8000772 <__sflush_r+0xf2>
 80006e0:	4a29      	ldr	r2, [pc, #164]	; (8000788 <__sflush_r+0x108>)
 80006e2:	40ca      	lsrs	r2, r1
 80006e4:	07d6      	lsls	r6, r2, #31
 80006e6:	d544      	bpl.n	8000772 <__sflush_r+0xf2>
 80006e8:	2200      	movs	r2, #0
 80006ea:	6062      	str	r2, [r4, #4]
 80006ec:	04d9      	lsls	r1, r3, #19
 80006ee:	6922      	ldr	r2, [r4, #16]
 80006f0:	6022      	str	r2, [r4, #0]
 80006f2:	d504      	bpl.n	80006fe <__sflush_r+0x7e>
 80006f4:	1c42      	adds	r2, r0, #1
 80006f6:	d101      	bne.n	80006fc <__sflush_r+0x7c>
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	b903      	cbnz	r3, 80006fe <__sflush_r+0x7e>
 80006fc:	6560      	str	r0, [r4, #84]	; 0x54
 80006fe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000700:	602f      	str	r7, [r5, #0]
 8000702:	2900      	cmp	r1, #0
 8000704:	d0c9      	beq.n	800069a <__sflush_r+0x1a>
 8000706:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800070a:	4299      	cmp	r1, r3
 800070c:	d002      	beq.n	8000714 <__sflush_r+0x94>
 800070e:	4628      	mov	r0, r5
 8000710:	f000 f994 	bl	8000a3c <_free_r>
 8000714:	2000      	movs	r0, #0
 8000716:	6360      	str	r0, [r4, #52]	; 0x34
 8000718:	e7c0      	b.n	800069c <__sflush_r+0x1c>
 800071a:	2301      	movs	r3, #1
 800071c:	4628      	mov	r0, r5
 800071e:	47b0      	blx	r6
 8000720:	1c41      	adds	r1, r0, #1
 8000722:	d1c8      	bne.n	80006b6 <__sflush_r+0x36>
 8000724:	682b      	ldr	r3, [r5, #0]
 8000726:	2b00      	cmp	r3, #0
 8000728:	d0c5      	beq.n	80006b6 <__sflush_r+0x36>
 800072a:	2b1d      	cmp	r3, #29
 800072c:	d001      	beq.n	8000732 <__sflush_r+0xb2>
 800072e:	2b16      	cmp	r3, #22
 8000730:	d101      	bne.n	8000736 <__sflush_r+0xb6>
 8000732:	602f      	str	r7, [r5, #0]
 8000734:	e7b1      	b.n	800069a <__sflush_r+0x1a>
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800073c:	81a3      	strh	r3, [r4, #12]
 800073e:	e7ad      	b.n	800069c <__sflush_r+0x1c>
 8000740:	690f      	ldr	r7, [r1, #16]
 8000742:	2f00      	cmp	r7, #0
 8000744:	d0a9      	beq.n	800069a <__sflush_r+0x1a>
 8000746:	0793      	lsls	r3, r2, #30
 8000748:	680e      	ldr	r6, [r1, #0]
 800074a:	bf08      	it	eq
 800074c:	694b      	ldreq	r3, [r1, #20]
 800074e:	600f      	str	r7, [r1, #0]
 8000750:	bf18      	it	ne
 8000752:	2300      	movne	r3, #0
 8000754:	eba6 0807 	sub.w	r8, r6, r7
 8000758:	608b      	str	r3, [r1, #8]
 800075a:	f1b8 0f00 	cmp.w	r8, #0
 800075e:	dd9c      	ble.n	800069a <__sflush_r+0x1a>
 8000760:	4643      	mov	r3, r8
 8000762:	463a      	mov	r2, r7
 8000764:	6a21      	ldr	r1, [r4, #32]
 8000766:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000768:	4628      	mov	r0, r5
 800076a:	47b0      	blx	r6
 800076c:	2800      	cmp	r0, #0
 800076e:	dc06      	bgt.n	800077e <__sflush_r+0xfe>
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000776:	81a3      	strh	r3, [r4, #12]
 8000778:	f04f 30ff 	mov.w	r0, #4294967295
 800077c:	e78e      	b.n	800069c <__sflush_r+0x1c>
 800077e:	4407      	add	r7, r0
 8000780:	eba8 0800 	sub.w	r8, r8, r0
 8000784:	e7e9      	b.n	800075a <__sflush_r+0xda>
 8000786:	bf00      	nop
 8000788:	20400001 	.word	0x20400001

0800078c <_fflush_r>:
 800078c:	b538      	push	{r3, r4, r5, lr}
 800078e:	690b      	ldr	r3, [r1, #16]
 8000790:	4605      	mov	r5, r0
 8000792:	460c      	mov	r4, r1
 8000794:	b1db      	cbz	r3, 80007ce <_fflush_r+0x42>
 8000796:	b118      	cbz	r0, 80007a0 <_fflush_r+0x14>
 8000798:	6983      	ldr	r3, [r0, #24]
 800079a:	b90b      	cbnz	r3, 80007a0 <_fflush_r+0x14>
 800079c:	f000 f860 	bl	8000860 <__sinit>
 80007a0:	4b0c      	ldr	r3, [pc, #48]	; (80007d4 <_fflush_r+0x48>)
 80007a2:	429c      	cmp	r4, r3
 80007a4:	d109      	bne.n	80007ba <_fflush_r+0x2e>
 80007a6:	686c      	ldr	r4, [r5, #4]
 80007a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007ac:	b17b      	cbz	r3, 80007ce <_fflush_r+0x42>
 80007ae:	4621      	mov	r1, r4
 80007b0:	4628      	mov	r0, r5
 80007b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007b6:	f7ff bf63 	b.w	8000680 <__sflush_r>
 80007ba:	4b07      	ldr	r3, [pc, #28]	; (80007d8 <_fflush_r+0x4c>)
 80007bc:	429c      	cmp	r4, r3
 80007be:	d101      	bne.n	80007c4 <_fflush_r+0x38>
 80007c0:	68ac      	ldr	r4, [r5, #8]
 80007c2:	e7f1      	b.n	80007a8 <_fflush_r+0x1c>
 80007c4:	4b05      	ldr	r3, [pc, #20]	; (80007dc <_fflush_r+0x50>)
 80007c6:	429c      	cmp	r4, r3
 80007c8:	bf08      	it	eq
 80007ca:	68ec      	ldreq	r4, [r5, #12]
 80007cc:	e7ec      	b.n	80007a8 <_fflush_r+0x1c>
 80007ce:	2000      	movs	r0, #0
 80007d0:	bd38      	pop	{r3, r4, r5, pc}
 80007d2:	bf00      	nop
 80007d4:	08000d58 	.word	0x08000d58
 80007d8:	08000d78 	.word	0x08000d78
 80007dc:	08000d38 	.word	0x08000d38

080007e0 <std>:
 80007e0:	2300      	movs	r3, #0
 80007e2:	b510      	push	{r4, lr}
 80007e4:	4604      	mov	r4, r0
 80007e6:	e9c0 3300 	strd	r3, r3, [r0]
 80007ea:	6083      	str	r3, [r0, #8]
 80007ec:	8181      	strh	r1, [r0, #12]
 80007ee:	6643      	str	r3, [r0, #100]	; 0x64
 80007f0:	81c2      	strh	r2, [r0, #14]
 80007f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007f6:	6183      	str	r3, [r0, #24]
 80007f8:	4619      	mov	r1, r3
 80007fa:	2208      	movs	r2, #8
 80007fc:	305c      	adds	r0, #92	; 0x5c
 80007fe:	f7ff fe13 	bl	8000428 <memset>
 8000802:	4b05      	ldr	r3, [pc, #20]	; (8000818 <std+0x38>)
 8000804:	6263      	str	r3, [r4, #36]	; 0x24
 8000806:	4b05      	ldr	r3, [pc, #20]	; (800081c <std+0x3c>)
 8000808:	62a3      	str	r3, [r4, #40]	; 0x28
 800080a:	4b05      	ldr	r3, [pc, #20]	; (8000820 <std+0x40>)
 800080c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800080e:	4b05      	ldr	r3, [pc, #20]	; (8000824 <std+0x44>)
 8000810:	6224      	str	r4, [r4, #32]
 8000812:	6323      	str	r3, [r4, #48]	; 0x30
 8000814:	bd10      	pop	{r4, pc}
 8000816:	bf00      	nop
 8000818:	08000bad 	.word	0x08000bad
 800081c:	08000bcf 	.word	0x08000bcf
 8000820:	08000c07 	.word	0x08000c07
 8000824:	08000c2b 	.word	0x08000c2b

08000828 <_cleanup_r>:
 8000828:	4901      	ldr	r1, [pc, #4]	; (8000830 <_cleanup_r+0x8>)
 800082a:	f000 b885 	b.w	8000938 <_fwalk_reent>
 800082e:	bf00      	nop
 8000830:	0800078d 	.word	0x0800078d

08000834 <__sfmoreglue>:
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	1e4a      	subs	r2, r1, #1
 8000838:	2568      	movs	r5, #104	; 0x68
 800083a:	4355      	muls	r5, r2
 800083c:	460e      	mov	r6, r1
 800083e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000842:	f000 f949 	bl	8000ad8 <_malloc_r>
 8000846:	4604      	mov	r4, r0
 8000848:	b140      	cbz	r0, 800085c <__sfmoreglue+0x28>
 800084a:	2100      	movs	r1, #0
 800084c:	e9c0 1600 	strd	r1, r6, [r0]
 8000850:	300c      	adds	r0, #12
 8000852:	60a0      	str	r0, [r4, #8]
 8000854:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000858:	f7ff fde6 	bl	8000428 <memset>
 800085c:	4620      	mov	r0, r4
 800085e:	bd70      	pop	{r4, r5, r6, pc}

08000860 <__sinit>:
 8000860:	6983      	ldr	r3, [r0, #24]
 8000862:	b510      	push	{r4, lr}
 8000864:	4604      	mov	r4, r0
 8000866:	bb33      	cbnz	r3, 80008b6 <__sinit+0x56>
 8000868:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800086c:	6503      	str	r3, [r0, #80]	; 0x50
 800086e:	4b12      	ldr	r3, [pc, #72]	; (80008b8 <__sinit+0x58>)
 8000870:	4a12      	ldr	r2, [pc, #72]	; (80008bc <__sinit+0x5c>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	6282      	str	r2, [r0, #40]	; 0x28
 8000876:	4298      	cmp	r0, r3
 8000878:	bf04      	itt	eq
 800087a:	2301      	moveq	r3, #1
 800087c:	6183      	streq	r3, [r0, #24]
 800087e:	f000 f81f 	bl	80008c0 <__sfp>
 8000882:	6060      	str	r0, [r4, #4]
 8000884:	4620      	mov	r0, r4
 8000886:	f000 f81b 	bl	80008c0 <__sfp>
 800088a:	60a0      	str	r0, [r4, #8]
 800088c:	4620      	mov	r0, r4
 800088e:	f000 f817 	bl	80008c0 <__sfp>
 8000892:	2200      	movs	r2, #0
 8000894:	60e0      	str	r0, [r4, #12]
 8000896:	2104      	movs	r1, #4
 8000898:	6860      	ldr	r0, [r4, #4]
 800089a:	f7ff ffa1 	bl	80007e0 <std>
 800089e:	2201      	movs	r2, #1
 80008a0:	2109      	movs	r1, #9
 80008a2:	68a0      	ldr	r0, [r4, #8]
 80008a4:	f7ff ff9c 	bl	80007e0 <std>
 80008a8:	2202      	movs	r2, #2
 80008aa:	2112      	movs	r1, #18
 80008ac:	68e0      	ldr	r0, [r4, #12]
 80008ae:	f7ff ff97 	bl	80007e0 <std>
 80008b2:	2301      	movs	r3, #1
 80008b4:	61a3      	str	r3, [r4, #24]
 80008b6:	bd10      	pop	{r4, pc}
 80008b8:	08000d34 	.word	0x08000d34
 80008bc:	08000829 	.word	0x08000829

080008c0 <__sfp>:
 80008c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008c2:	4b1b      	ldr	r3, [pc, #108]	; (8000930 <__sfp+0x70>)
 80008c4:	681e      	ldr	r6, [r3, #0]
 80008c6:	69b3      	ldr	r3, [r6, #24]
 80008c8:	4607      	mov	r7, r0
 80008ca:	b913      	cbnz	r3, 80008d2 <__sfp+0x12>
 80008cc:	4630      	mov	r0, r6
 80008ce:	f7ff ffc7 	bl	8000860 <__sinit>
 80008d2:	3648      	adds	r6, #72	; 0x48
 80008d4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008d8:	3b01      	subs	r3, #1
 80008da:	d503      	bpl.n	80008e4 <__sfp+0x24>
 80008dc:	6833      	ldr	r3, [r6, #0]
 80008de:	b133      	cbz	r3, 80008ee <__sfp+0x2e>
 80008e0:	6836      	ldr	r6, [r6, #0]
 80008e2:	e7f7      	b.n	80008d4 <__sfp+0x14>
 80008e4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008e8:	b16d      	cbz	r5, 8000906 <__sfp+0x46>
 80008ea:	3468      	adds	r4, #104	; 0x68
 80008ec:	e7f4      	b.n	80008d8 <__sfp+0x18>
 80008ee:	2104      	movs	r1, #4
 80008f0:	4638      	mov	r0, r7
 80008f2:	f7ff ff9f 	bl	8000834 <__sfmoreglue>
 80008f6:	6030      	str	r0, [r6, #0]
 80008f8:	2800      	cmp	r0, #0
 80008fa:	d1f1      	bne.n	80008e0 <__sfp+0x20>
 80008fc:	230c      	movs	r3, #12
 80008fe:	603b      	str	r3, [r7, #0]
 8000900:	4604      	mov	r4, r0
 8000902:	4620      	mov	r0, r4
 8000904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000906:	4b0b      	ldr	r3, [pc, #44]	; (8000934 <__sfp+0x74>)
 8000908:	6665      	str	r5, [r4, #100]	; 0x64
 800090a:	e9c4 5500 	strd	r5, r5, [r4]
 800090e:	60a5      	str	r5, [r4, #8]
 8000910:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000914:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000918:	2208      	movs	r2, #8
 800091a:	4629      	mov	r1, r5
 800091c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000920:	f7ff fd82 	bl	8000428 <memset>
 8000924:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000928:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800092c:	e7e9      	b.n	8000902 <__sfp+0x42>
 800092e:	bf00      	nop
 8000930:	08000d34 	.word	0x08000d34
 8000934:	ffff0001 	.word	0xffff0001

08000938 <_fwalk_reent>:
 8000938:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800093c:	4680      	mov	r8, r0
 800093e:	4689      	mov	r9, r1
 8000940:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000944:	2600      	movs	r6, #0
 8000946:	b914      	cbnz	r4, 800094e <_fwalk_reent+0x16>
 8000948:	4630      	mov	r0, r6
 800094a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800094e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000952:	3f01      	subs	r7, #1
 8000954:	d501      	bpl.n	800095a <_fwalk_reent+0x22>
 8000956:	6824      	ldr	r4, [r4, #0]
 8000958:	e7f5      	b.n	8000946 <_fwalk_reent+0xe>
 800095a:	89ab      	ldrh	r3, [r5, #12]
 800095c:	2b01      	cmp	r3, #1
 800095e:	d907      	bls.n	8000970 <_fwalk_reent+0x38>
 8000960:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000964:	3301      	adds	r3, #1
 8000966:	d003      	beq.n	8000970 <_fwalk_reent+0x38>
 8000968:	4629      	mov	r1, r5
 800096a:	4640      	mov	r0, r8
 800096c:	47c8      	blx	r9
 800096e:	4306      	orrs	r6, r0
 8000970:	3568      	adds	r5, #104	; 0x68
 8000972:	e7ee      	b.n	8000952 <_fwalk_reent+0x1a>

08000974 <__swhatbuf_r>:
 8000974:	b570      	push	{r4, r5, r6, lr}
 8000976:	460e      	mov	r6, r1
 8000978:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800097c:	2900      	cmp	r1, #0
 800097e:	b096      	sub	sp, #88	; 0x58
 8000980:	4614      	mov	r4, r2
 8000982:	461d      	mov	r5, r3
 8000984:	da07      	bge.n	8000996 <__swhatbuf_r+0x22>
 8000986:	2300      	movs	r3, #0
 8000988:	602b      	str	r3, [r5, #0]
 800098a:	89b3      	ldrh	r3, [r6, #12]
 800098c:	061a      	lsls	r2, r3, #24
 800098e:	d410      	bmi.n	80009b2 <__swhatbuf_r+0x3e>
 8000990:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000994:	e00e      	b.n	80009b4 <__swhatbuf_r+0x40>
 8000996:	466a      	mov	r2, sp
 8000998:	f000 f96e 	bl	8000c78 <_fstat_r>
 800099c:	2800      	cmp	r0, #0
 800099e:	dbf2      	blt.n	8000986 <__swhatbuf_r+0x12>
 80009a0:	9a01      	ldr	r2, [sp, #4]
 80009a2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009a6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009aa:	425a      	negs	r2, r3
 80009ac:	415a      	adcs	r2, r3
 80009ae:	602a      	str	r2, [r5, #0]
 80009b0:	e7ee      	b.n	8000990 <__swhatbuf_r+0x1c>
 80009b2:	2340      	movs	r3, #64	; 0x40
 80009b4:	2000      	movs	r0, #0
 80009b6:	6023      	str	r3, [r4, #0]
 80009b8:	b016      	add	sp, #88	; 0x58
 80009ba:	bd70      	pop	{r4, r5, r6, pc}

080009bc <__smakebuf_r>:
 80009bc:	898b      	ldrh	r3, [r1, #12]
 80009be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009c0:	079d      	lsls	r5, r3, #30
 80009c2:	4606      	mov	r6, r0
 80009c4:	460c      	mov	r4, r1
 80009c6:	d507      	bpl.n	80009d8 <__smakebuf_r+0x1c>
 80009c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009cc:	6023      	str	r3, [r4, #0]
 80009ce:	6123      	str	r3, [r4, #16]
 80009d0:	2301      	movs	r3, #1
 80009d2:	6163      	str	r3, [r4, #20]
 80009d4:	b002      	add	sp, #8
 80009d6:	bd70      	pop	{r4, r5, r6, pc}
 80009d8:	ab01      	add	r3, sp, #4
 80009da:	466a      	mov	r2, sp
 80009dc:	f7ff ffca 	bl	8000974 <__swhatbuf_r>
 80009e0:	9900      	ldr	r1, [sp, #0]
 80009e2:	4605      	mov	r5, r0
 80009e4:	4630      	mov	r0, r6
 80009e6:	f000 f877 	bl	8000ad8 <_malloc_r>
 80009ea:	b948      	cbnz	r0, 8000a00 <__smakebuf_r+0x44>
 80009ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009f0:	059a      	lsls	r2, r3, #22
 80009f2:	d4ef      	bmi.n	80009d4 <__smakebuf_r+0x18>
 80009f4:	f023 0303 	bic.w	r3, r3, #3
 80009f8:	f043 0302 	orr.w	r3, r3, #2
 80009fc:	81a3      	strh	r3, [r4, #12]
 80009fe:	e7e3      	b.n	80009c8 <__smakebuf_r+0xc>
 8000a00:	4b0d      	ldr	r3, [pc, #52]	; (8000a38 <__smakebuf_r+0x7c>)
 8000a02:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a04:	89a3      	ldrh	r3, [r4, #12]
 8000a06:	6020      	str	r0, [r4, #0]
 8000a08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a0c:	81a3      	strh	r3, [r4, #12]
 8000a0e:	9b00      	ldr	r3, [sp, #0]
 8000a10:	6163      	str	r3, [r4, #20]
 8000a12:	9b01      	ldr	r3, [sp, #4]
 8000a14:	6120      	str	r0, [r4, #16]
 8000a16:	b15b      	cbz	r3, 8000a30 <__smakebuf_r+0x74>
 8000a18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a1c:	4630      	mov	r0, r6
 8000a1e:	f000 f93d 	bl	8000c9c <_isatty_r>
 8000a22:	b128      	cbz	r0, 8000a30 <__smakebuf_r+0x74>
 8000a24:	89a3      	ldrh	r3, [r4, #12]
 8000a26:	f023 0303 	bic.w	r3, r3, #3
 8000a2a:	f043 0301 	orr.w	r3, r3, #1
 8000a2e:	81a3      	strh	r3, [r4, #12]
 8000a30:	89a3      	ldrh	r3, [r4, #12]
 8000a32:	431d      	orrs	r5, r3
 8000a34:	81a5      	strh	r5, [r4, #12]
 8000a36:	e7cd      	b.n	80009d4 <__smakebuf_r+0x18>
 8000a38:	08000829 	.word	0x08000829

08000a3c <_free_r>:
 8000a3c:	b538      	push	{r3, r4, r5, lr}
 8000a3e:	4605      	mov	r5, r0
 8000a40:	2900      	cmp	r1, #0
 8000a42:	d045      	beq.n	8000ad0 <_free_r+0x94>
 8000a44:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a48:	1f0c      	subs	r4, r1, #4
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	bfb8      	it	lt
 8000a4e:	18e4      	addlt	r4, r4, r3
 8000a50:	f000 f946 	bl	8000ce0 <__malloc_lock>
 8000a54:	4a1f      	ldr	r2, [pc, #124]	; (8000ad4 <_free_r+0x98>)
 8000a56:	6813      	ldr	r3, [r2, #0]
 8000a58:	4610      	mov	r0, r2
 8000a5a:	b933      	cbnz	r3, 8000a6a <_free_r+0x2e>
 8000a5c:	6063      	str	r3, [r4, #4]
 8000a5e:	6014      	str	r4, [r2, #0]
 8000a60:	4628      	mov	r0, r5
 8000a62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a66:	f000 b93c 	b.w	8000ce2 <__malloc_unlock>
 8000a6a:	42a3      	cmp	r3, r4
 8000a6c:	d90c      	bls.n	8000a88 <_free_r+0x4c>
 8000a6e:	6821      	ldr	r1, [r4, #0]
 8000a70:	1862      	adds	r2, r4, r1
 8000a72:	4293      	cmp	r3, r2
 8000a74:	bf04      	itt	eq
 8000a76:	681a      	ldreq	r2, [r3, #0]
 8000a78:	685b      	ldreq	r3, [r3, #4]
 8000a7a:	6063      	str	r3, [r4, #4]
 8000a7c:	bf04      	itt	eq
 8000a7e:	1852      	addeq	r2, r2, r1
 8000a80:	6022      	streq	r2, [r4, #0]
 8000a82:	6004      	str	r4, [r0, #0]
 8000a84:	e7ec      	b.n	8000a60 <_free_r+0x24>
 8000a86:	4613      	mov	r3, r2
 8000a88:	685a      	ldr	r2, [r3, #4]
 8000a8a:	b10a      	cbz	r2, 8000a90 <_free_r+0x54>
 8000a8c:	42a2      	cmp	r2, r4
 8000a8e:	d9fa      	bls.n	8000a86 <_free_r+0x4a>
 8000a90:	6819      	ldr	r1, [r3, #0]
 8000a92:	1858      	adds	r0, r3, r1
 8000a94:	42a0      	cmp	r0, r4
 8000a96:	d10b      	bne.n	8000ab0 <_free_r+0x74>
 8000a98:	6820      	ldr	r0, [r4, #0]
 8000a9a:	4401      	add	r1, r0
 8000a9c:	1858      	adds	r0, r3, r1
 8000a9e:	4282      	cmp	r2, r0
 8000aa0:	6019      	str	r1, [r3, #0]
 8000aa2:	d1dd      	bne.n	8000a60 <_free_r+0x24>
 8000aa4:	6810      	ldr	r0, [r2, #0]
 8000aa6:	6852      	ldr	r2, [r2, #4]
 8000aa8:	605a      	str	r2, [r3, #4]
 8000aaa:	4401      	add	r1, r0
 8000aac:	6019      	str	r1, [r3, #0]
 8000aae:	e7d7      	b.n	8000a60 <_free_r+0x24>
 8000ab0:	d902      	bls.n	8000ab8 <_free_r+0x7c>
 8000ab2:	230c      	movs	r3, #12
 8000ab4:	602b      	str	r3, [r5, #0]
 8000ab6:	e7d3      	b.n	8000a60 <_free_r+0x24>
 8000ab8:	6820      	ldr	r0, [r4, #0]
 8000aba:	1821      	adds	r1, r4, r0
 8000abc:	428a      	cmp	r2, r1
 8000abe:	bf04      	itt	eq
 8000ac0:	6811      	ldreq	r1, [r2, #0]
 8000ac2:	6852      	ldreq	r2, [r2, #4]
 8000ac4:	6062      	str	r2, [r4, #4]
 8000ac6:	bf04      	itt	eq
 8000ac8:	1809      	addeq	r1, r1, r0
 8000aca:	6021      	streq	r1, [r4, #0]
 8000acc:	605c      	str	r4, [r3, #4]
 8000ace:	e7c7      	b.n	8000a60 <_free_r+0x24>
 8000ad0:	bd38      	pop	{r3, r4, r5, pc}
 8000ad2:	bf00      	nop
 8000ad4:	20000084 	.word	0x20000084

08000ad8 <_malloc_r>:
 8000ad8:	b570      	push	{r4, r5, r6, lr}
 8000ada:	1ccd      	adds	r5, r1, #3
 8000adc:	f025 0503 	bic.w	r5, r5, #3
 8000ae0:	3508      	adds	r5, #8
 8000ae2:	2d0c      	cmp	r5, #12
 8000ae4:	bf38      	it	cc
 8000ae6:	250c      	movcc	r5, #12
 8000ae8:	2d00      	cmp	r5, #0
 8000aea:	4606      	mov	r6, r0
 8000aec:	db01      	blt.n	8000af2 <_malloc_r+0x1a>
 8000aee:	42a9      	cmp	r1, r5
 8000af0:	d903      	bls.n	8000afa <_malloc_r+0x22>
 8000af2:	230c      	movs	r3, #12
 8000af4:	6033      	str	r3, [r6, #0]
 8000af6:	2000      	movs	r0, #0
 8000af8:	bd70      	pop	{r4, r5, r6, pc}
 8000afa:	f000 f8f1 	bl	8000ce0 <__malloc_lock>
 8000afe:	4a21      	ldr	r2, [pc, #132]	; (8000b84 <_malloc_r+0xac>)
 8000b00:	6814      	ldr	r4, [r2, #0]
 8000b02:	4621      	mov	r1, r4
 8000b04:	b991      	cbnz	r1, 8000b2c <_malloc_r+0x54>
 8000b06:	4c20      	ldr	r4, [pc, #128]	; (8000b88 <_malloc_r+0xb0>)
 8000b08:	6823      	ldr	r3, [r4, #0]
 8000b0a:	b91b      	cbnz	r3, 8000b14 <_malloc_r+0x3c>
 8000b0c:	4630      	mov	r0, r6
 8000b0e:	f000 f83d 	bl	8000b8c <_sbrk_r>
 8000b12:	6020      	str	r0, [r4, #0]
 8000b14:	4629      	mov	r1, r5
 8000b16:	4630      	mov	r0, r6
 8000b18:	f000 f838 	bl	8000b8c <_sbrk_r>
 8000b1c:	1c43      	adds	r3, r0, #1
 8000b1e:	d124      	bne.n	8000b6a <_malloc_r+0x92>
 8000b20:	230c      	movs	r3, #12
 8000b22:	6033      	str	r3, [r6, #0]
 8000b24:	4630      	mov	r0, r6
 8000b26:	f000 f8dc 	bl	8000ce2 <__malloc_unlock>
 8000b2a:	e7e4      	b.n	8000af6 <_malloc_r+0x1e>
 8000b2c:	680b      	ldr	r3, [r1, #0]
 8000b2e:	1b5b      	subs	r3, r3, r5
 8000b30:	d418      	bmi.n	8000b64 <_malloc_r+0x8c>
 8000b32:	2b0b      	cmp	r3, #11
 8000b34:	d90f      	bls.n	8000b56 <_malloc_r+0x7e>
 8000b36:	600b      	str	r3, [r1, #0]
 8000b38:	50cd      	str	r5, [r1, r3]
 8000b3a:	18cc      	adds	r4, r1, r3
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	f000 f8d0 	bl	8000ce2 <__malloc_unlock>
 8000b42:	f104 000b 	add.w	r0, r4, #11
 8000b46:	1d23      	adds	r3, r4, #4
 8000b48:	f020 0007 	bic.w	r0, r0, #7
 8000b4c:	1ac3      	subs	r3, r0, r3
 8000b4e:	d0d3      	beq.n	8000af8 <_malloc_r+0x20>
 8000b50:	425a      	negs	r2, r3
 8000b52:	50e2      	str	r2, [r4, r3]
 8000b54:	e7d0      	b.n	8000af8 <_malloc_r+0x20>
 8000b56:	428c      	cmp	r4, r1
 8000b58:	684b      	ldr	r3, [r1, #4]
 8000b5a:	bf16      	itet	ne
 8000b5c:	6063      	strne	r3, [r4, #4]
 8000b5e:	6013      	streq	r3, [r2, #0]
 8000b60:	460c      	movne	r4, r1
 8000b62:	e7eb      	b.n	8000b3c <_malloc_r+0x64>
 8000b64:	460c      	mov	r4, r1
 8000b66:	6849      	ldr	r1, [r1, #4]
 8000b68:	e7cc      	b.n	8000b04 <_malloc_r+0x2c>
 8000b6a:	1cc4      	adds	r4, r0, #3
 8000b6c:	f024 0403 	bic.w	r4, r4, #3
 8000b70:	42a0      	cmp	r0, r4
 8000b72:	d005      	beq.n	8000b80 <_malloc_r+0xa8>
 8000b74:	1a21      	subs	r1, r4, r0
 8000b76:	4630      	mov	r0, r6
 8000b78:	f000 f808 	bl	8000b8c <_sbrk_r>
 8000b7c:	3001      	adds	r0, #1
 8000b7e:	d0cf      	beq.n	8000b20 <_malloc_r+0x48>
 8000b80:	6025      	str	r5, [r4, #0]
 8000b82:	e7db      	b.n	8000b3c <_malloc_r+0x64>
 8000b84:	20000084 	.word	0x20000084
 8000b88:	20000088 	.word	0x20000088

08000b8c <_sbrk_r>:
 8000b8c:	b538      	push	{r3, r4, r5, lr}
 8000b8e:	4c06      	ldr	r4, [pc, #24]	; (8000ba8 <_sbrk_r+0x1c>)
 8000b90:	2300      	movs	r3, #0
 8000b92:	4605      	mov	r5, r0
 8000b94:	4608      	mov	r0, r1
 8000b96:	6023      	str	r3, [r4, #0]
 8000b98:	f7ff fbbc 	bl	8000314 <_sbrk>
 8000b9c:	1c43      	adds	r3, r0, #1
 8000b9e:	d102      	bne.n	8000ba6 <_sbrk_r+0x1a>
 8000ba0:	6823      	ldr	r3, [r4, #0]
 8000ba2:	b103      	cbz	r3, 8000ba6 <_sbrk_r+0x1a>
 8000ba4:	602b      	str	r3, [r5, #0]
 8000ba6:	bd38      	pop	{r3, r4, r5, pc}
 8000ba8:	2000008c 	.word	0x2000008c

08000bac <__sread>:
 8000bac:	b510      	push	{r4, lr}
 8000bae:	460c      	mov	r4, r1
 8000bb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bb4:	f000 f896 	bl	8000ce4 <_read_r>
 8000bb8:	2800      	cmp	r0, #0
 8000bba:	bfab      	itete	ge
 8000bbc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bbe:	89a3      	ldrhlt	r3, [r4, #12]
 8000bc0:	181b      	addge	r3, r3, r0
 8000bc2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bc6:	bfac      	ite	ge
 8000bc8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bca:	81a3      	strhlt	r3, [r4, #12]
 8000bcc:	bd10      	pop	{r4, pc}

08000bce <__swrite>:
 8000bce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bd2:	461f      	mov	r7, r3
 8000bd4:	898b      	ldrh	r3, [r1, #12]
 8000bd6:	05db      	lsls	r3, r3, #23
 8000bd8:	4605      	mov	r5, r0
 8000bda:	460c      	mov	r4, r1
 8000bdc:	4616      	mov	r6, r2
 8000bde:	d505      	bpl.n	8000bec <__swrite+0x1e>
 8000be0:	2302      	movs	r3, #2
 8000be2:	2200      	movs	r2, #0
 8000be4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be8:	f000 f868 	bl	8000cbc <_lseek_r>
 8000bec:	89a3      	ldrh	r3, [r4, #12]
 8000bee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bf2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000bf6:	81a3      	strh	r3, [r4, #12]
 8000bf8:	4632      	mov	r2, r6
 8000bfa:	463b      	mov	r3, r7
 8000bfc:	4628      	mov	r0, r5
 8000bfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c02:	f000 b817 	b.w	8000c34 <_write_r>

08000c06 <__sseek>:
 8000c06:	b510      	push	{r4, lr}
 8000c08:	460c      	mov	r4, r1
 8000c0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c0e:	f000 f855 	bl	8000cbc <_lseek_r>
 8000c12:	1c43      	adds	r3, r0, #1
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	bf15      	itete	ne
 8000c18:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c22:	81a3      	strheq	r3, [r4, #12]
 8000c24:	bf18      	it	ne
 8000c26:	81a3      	strhne	r3, [r4, #12]
 8000c28:	bd10      	pop	{r4, pc}

08000c2a <__sclose>:
 8000c2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c2e:	f000 b813 	b.w	8000c58 <_close_r>
	...

08000c34 <_write_r>:
 8000c34:	b538      	push	{r3, r4, r5, lr}
 8000c36:	4c07      	ldr	r4, [pc, #28]	; (8000c54 <_write_r+0x20>)
 8000c38:	4605      	mov	r5, r0
 8000c3a:	4608      	mov	r0, r1
 8000c3c:	4611      	mov	r1, r2
 8000c3e:	2200      	movs	r2, #0
 8000c40:	6022      	str	r2, [r4, #0]
 8000c42:	461a      	mov	r2, r3
 8000c44:	f7ff fb15 	bl	8000272 <_write>
 8000c48:	1c43      	adds	r3, r0, #1
 8000c4a:	d102      	bne.n	8000c52 <_write_r+0x1e>
 8000c4c:	6823      	ldr	r3, [r4, #0]
 8000c4e:	b103      	cbz	r3, 8000c52 <_write_r+0x1e>
 8000c50:	602b      	str	r3, [r5, #0]
 8000c52:	bd38      	pop	{r3, r4, r5, pc}
 8000c54:	2000008c 	.word	0x2000008c

08000c58 <_close_r>:
 8000c58:	b538      	push	{r3, r4, r5, lr}
 8000c5a:	4c06      	ldr	r4, [pc, #24]	; (8000c74 <_close_r+0x1c>)
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	4605      	mov	r5, r0
 8000c60:	4608      	mov	r0, r1
 8000c62:	6023      	str	r3, [r4, #0]
 8000c64:	f7ff fb21 	bl	80002aa <_close>
 8000c68:	1c43      	adds	r3, r0, #1
 8000c6a:	d102      	bne.n	8000c72 <_close_r+0x1a>
 8000c6c:	6823      	ldr	r3, [r4, #0]
 8000c6e:	b103      	cbz	r3, 8000c72 <_close_r+0x1a>
 8000c70:	602b      	str	r3, [r5, #0]
 8000c72:	bd38      	pop	{r3, r4, r5, pc}
 8000c74:	2000008c 	.word	0x2000008c

08000c78 <_fstat_r>:
 8000c78:	b538      	push	{r3, r4, r5, lr}
 8000c7a:	4c07      	ldr	r4, [pc, #28]	; (8000c98 <_fstat_r+0x20>)
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	4605      	mov	r5, r0
 8000c80:	4608      	mov	r0, r1
 8000c82:	4611      	mov	r1, r2
 8000c84:	6023      	str	r3, [r4, #0]
 8000c86:	f7ff fb1c 	bl	80002c2 <_fstat>
 8000c8a:	1c43      	adds	r3, r0, #1
 8000c8c:	d102      	bne.n	8000c94 <_fstat_r+0x1c>
 8000c8e:	6823      	ldr	r3, [r4, #0]
 8000c90:	b103      	cbz	r3, 8000c94 <_fstat_r+0x1c>
 8000c92:	602b      	str	r3, [r5, #0]
 8000c94:	bd38      	pop	{r3, r4, r5, pc}
 8000c96:	bf00      	nop
 8000c98:	2000008c 	.word	0x2000008c

08000c9c <_isatty_r>:
 8000c9c:	b538      	push	{r3, r4, r5, lr}
 8000c9e:	4c06      	ldr	r4, [pc, #24]	; (8000cb8 <_isatty_r+0x1c>)
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	4605      	mov	r5, r0
 8000ca4:	4608      	mov	r0, r1
 8000ca6:	6023      	str	r3, [r4, #0]
 8000ca8:	f7ff fb1b 	bl	80002e2 <_isatty>
 8000cac:	1c43      	adds	r3, r0, #1
 8000cae:	d102      	bne.n	8000cb6 <_isatty_r+0x1a>
 8000cb0:	6823      	ldr	r3, [r4, #0]
 8000cb2:	b103      	cbz	r3, 8000cb6 <_isatty_r+0x1a>
 8000cb4:	602b      	str	r3, [r5, #0]
 8000cb6:	bd38      	pop	{r3, r4, r5, pc}
 8000cb8:	2000008c 	.word	0x2000008c

08000cbc <_lseek_r>:
 8000cbc:	b538      	push	{r3, r4, r5, lr}
 8000cbe:	4c07      	ldr	r4, [pc, #28]	; (8000cdc <_lseek_r+0x20>)
 8000cc0:	4605      	mov	r5, r0
 8000cc2:	4608      	mov	r0, r1
 8000cc4:	4611      	mov	r1, r2
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	6022      	str	r2, [r4, #0]
 8000cca:	461a      	mov	r2, r3
 8000ccc:	f7ff fb14 	bl	80002f8 <_lseek>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d102      	bne.n	8000cda <_lseek_r+0x1e>
 8000cd4:	6823      	ldr	r3, [r4, #0]
 8000cd6:	b103      	cbz	r3, 8000cda <_lseek_r+0x1e>
 8000cd8:	602b      	str	r3, [r5, #0]
 8000cda:	bd38      	pop	{r3, r4, r5, pc}
 8000cdc:	2000008c 	.word	0x2000008c

08000ce0 <__malloc_lock>:
 8000ce0:	4770      	bx	lr

08000ce2 <__malloc_unlock>:
 8000ce2:	4770      	bx	lr

08000ce4 <_read_r>:
 8000ce4:	b538      	push	{r3, r4, r5, lr}
 8000ce6:	4c07      	ldr	r4, [pc, #28]	; (8000d04 <_read_r+0x20>)
 8000ce8:	4605      	mov	r5, r0
 8000cea:	4608      	mov	r0, r1
 8000cec:	4611      	mov	r1, r2
 8000cee:	2200      	movs	r2, #0
 8000cf0:	6022      	str	r2, [r4, #0]
 8000cf2:	461a      	mov	r2, r3
 8000cf4:	f7ff faa0 	bl	8000238 <_read>
 8000cf8:	1c43      	adds	r3, r0, #1
 8000cfa:	d102      	bne.n	8000d02 <_read_r+0x1e>
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	b103      	cbz	r3, 8000d02 <_read_r+0x1e>
 8000d00:	602b      	str	r3, [r5, #0]
 8000d02:	bd38      	pop	{r3, r4, r5, pc}
 8000d04:	2000008c 	.word	0x2000008c

08000d08 <_init>:
 8000d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d0a:	bf00      	nop
 8000d0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d0e:	bc08      	pop	{r3}
 8000d10:	469e      	mov	lr, r3
 8000d12:	4770      	bx	lr

08000d14 <_fini>:
 8000d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d16:	bf00      	nop
 8000d18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d1a:	bc08      	pop	{r3}
 8000d1c:	469e      	mov	lr, r3
 8000d1e:	4770      	bx	lr
