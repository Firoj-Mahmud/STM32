/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>


int main(void)
{
	// Peripheral Register Address; PB 1-4 input mode; PB 12-15 output mode

	uint32_t volatile *pGPIOBModeReg = (uint32_t*)(0x40020400);
	uint32_t volatile *pInPutDataReg = (uint32_t*)(0x40020400+0x10);
	uint32_t volatile *pOutPutDataReg = (uint32_t*)(0x40020400+0x14);
	uint32_t volatile *pClockCtrlReg = (uint32_t*)(0x40023800+0x30);
	uint32_t volatile *pPullUpDownReg = (uint32_t*)(0x40020400+0x0C);

	//Enable the peripheral clock of GPIOB PERIPHERAL
	*pClockCtrlReg |= (1<<2);

	// configure PB0, PB1, pb2, pb3 as output(rows)
	*pGPIOBModeReg &=~(0xFF); //clear
	*pGPIOBModeReg |= 0x55;  //set

	// Configure PB12 - 15 as input(columns)
	*pGPIOBModeReg &=~(0xFF<<24); //set zero for input mode
		  //set

	// enable internal pull up resistor for PB12-PB15
	*pPullUpDownReg &= ~(0xFF<<24);
	*pPullUpDownReg |=(0xFF<<24);

    /* Loop forever */
	for(;;);
}
